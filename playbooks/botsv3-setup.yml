- name: Pause localhost for 300 seconds
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Wait for 300 seconds before continuing
      pause:
        seconds: 300

- name: Setup Splunk Standalone Server
  hosts: splunk
  become: yes
  vars_files:
    - group_vars/all.yml
  vars:
    app_zip_url: "https://www.dropbox.com/scl/fi/q4zv0pa5yxsr0ilaquyo6/Bots_V3_splunkapps.tar?rlkey=nhfa8xdv3ncdqo5bf0vuxt97o&st=9em9i451&dl=1"

  roles:
    - deploy_splunk_app

  tasks:
    - name: Ensure Splunk User Exists
      user:
        name: splunk
        shell: /bin/bash
        createhome: yes

    - name: Check if Splunk is already running
      become: true
      become_user: splunk
      shell: /opt/splunk/bin/splunk status
      args:
        executable: /bin/bash
      register: splunk_status
      ignore_errors: true

    - name: Start Splunk only if not already running
      become: true
      become_user: splunk
      shell: /opt/splunk/bin/splunk start -auth admin:{{ splunk_instance.splunk_admin_password }} --accept-license --answer-yes --no-prompt
      args:
        executable: /bin/bash
      when: splunk_status.rc != 0

    - name: Wait for Splunk REST API (splunkd) to be available
      become: true
      wait_for:
        host: 127.0.0.1
        port: 8089
        delay: 5         # wait 5 seconds before first check
        timeout: 180     # wait up to 3 minutes
        state: started


    - name: Download and Add Tutorial Data to Splunk Monitoring
      become: yes
      become_user: splunk
      shell: |
        cd /tmp
        curl -o tutorialdata.zip https://docs.splunk.com/images/Tutorial/tutorialdata.zip
        if ! /opt/splunk/bin/splunk list monitor -auth admin:{{ splunk_instance.splunk_admin_password }} --accept-license | grep -q "/tmp/tutorialdata.zip"; then
          /opt/splunk/bin/splunk add monitor /tmp/tutorialdata.zip -host_segment 3 -disabled 0 -auth admin:{{ splunk_instance.splunk_admin_password }} --accept-license
        else
          echo "Tutorial data already added. Skipping."
        fi
      args:
        executable: /bin/bash

    - name: Download and Install Splunk BOTS v3 Dataset
      become: yes
      become_user: splunk
      shell: |
        cd /tmp
        curl -O https://botsdataset.s3.amazonaws.com/botsv3/botsv3_data_set.tgz
        /opt/splunk/bin/splunk install app "/tmp/botsv3_data_set.tgz" -auth admin:{{ splunk_instance.splunk_admin_password }} --accept-license
      args:
        executable: /bin/bash
      register: botsv3_result
      failed_when: >
        botsv3_result.rc != 0 and
        "'Server Certificate Hostname Validation is disabled' not in botsv3_result.stderr"


    - name: Restart Splunk
      become_user: root
      shell: "/opt/splunk/bin/splunk restart"
      args:
        executable: /bin/bash